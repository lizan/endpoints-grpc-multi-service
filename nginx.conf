daemon off;

user nginx nginx;

pid /var/run/nginx.pid;

worker_processes 1;

# Logging to stderr enables better integration with Docker and GKE/Kubernetes.
error_log stderr warn;

events { worker_connections 4096; }

http {
  include /etc/nginx/mime.types;
  server_tokens off;
  client_max_body_size 32m;
  client_body_buffer_size 128k;

  # HTTP subrequests
  endpoints_resolver 8.8.8.8;
  endpoints_certificates /etc/nginx/trusted-ca-certificates.crt;


  server {
    server_name "";

    listen 8080 http2;

    access_log /dev/stdout;

    # Begin Endpoints v2 Support
    endpoints {
      on;
      server_config /etc/nginx/server_config.pb.txt;
      api /etc/nginx/endpoints/service.json;
      metadata_server http://169.254.169.254;
    }
    # End Endpoints v2 Support

    location /helloworld.Greeter {
      grpc_pass helloworld:80 override;
    }
    location /endpoints.examples.bookstore.Bookstore {
      grpc_pass bookstore:80 override;
    }

    include /var/lib/nginx/extra/*.conf;
  }

  server {
    # expose /nginx_status and /endpoints_status but on a different port to
    # avoid external visibility / conflicts with the app.
    listen 8090;
    location /nginx_status {
      stub_status on;
      access_log off;
    }
    location /endpoints_status {
      endpoints_status;
      access_log off;
    }
    location /healthz {
      return 200;
      access_log off;
    }
    location / {
      root /dev/null;
    }
  }
}
